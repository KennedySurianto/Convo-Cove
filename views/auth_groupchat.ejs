<%- include("partials/auth_header.ejs") %>

    <!-- Chat Container -->
    <div class="container py-4">
        <div class="row h-100 m-1">
            <div class="border border-light blurred-background px-5 py-2 mb-2">

                <!-- Chat Messages -->
                <div class="col-12 p-3 overflow-y-auto" id="chat-messages">
                    <!-- Add more messages here... -->
                    <% if (locals.messages && messages.length> 0) { %>
                        <% messages.forEach((m)=> { %>
                            <div class="media mb-1">
                                <div class="media-body text-light">
                                    <div class="d-flex py-1">
                                        <div class=" d-flex flex-column justify-content-start">
                                            <img src="<%= m.profile_image_url %>"
                                                class="me-2 rounded-circle profile-picture" alt="Friend Avatar"
                                                style="width: 40px; height: 40px;">
                                        </div>
                                        <div>
                                            <div class="d-flex align-items-center">
                                                <h4 class="me-2">
                                                    <%= m.username %>
                                                </h4>
                                                <small>
                                                    <%= (()=> {
                                                        const date = new Date(m.created_at);
                                                        const now = new Date();

                                                        // Function to get the time part in 24-hour format
                                                        const getTime = (date) => {
                                                        const hours = String(date.getHours()).padStart(2, '0');
                                                        const minutes = String(date.getMinutes()).padStart(2, '0');
                                                        return `${hours}:${minutes}`;
                                                        };

                                                        // Function to check if two dates are on the same day
                                                        const isSameDay = (d1, d2) =>
                                                        d1.getFullYear() === d2.getFullYear() &&
                                                        d1.getMonth() === d2.getMonth() &&
                                                        d1.getDate() === d2.getDate();

                                                        // Get the time part
                                                        const time = getTime(date);

                                                        // Check if the date is today
                                                        if (isSameDay(date, now)) {
                                                        return `Today ${time}`;
                                                        }

                                                        // Check if the date is yesterday
                                                        const yesterday = new Date();
                                                        yesterday.setDate(now.getDate() - 1);
                                                        if (isSameDay(date, yesterday)) {
                                                        return `Yesterday ${time}`;
                                                        }

                                                        // If neither, format as mm/dd/yyyy
                                                        const formattedDate = date.toLocaleDateString([], { month:
                                                        '2-digit', day: '2-digit', year: 'numeric' });
                                                        return `${time} ${formattedDate}`;
                                                        })() %>

                                                </small>
                                            </div>
                                            <p>
                                                <%= m.content %>
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        <% }) %>
                    <% } %>
                </div>

                <!-- Chat Input -->
                <div class="col-12 mb-3">
                    <form id="chat-form">
                        <div class="input-group">
                            <input type="hidden" id="chat-id" value="<%= group.chat_id %>">

                            <input type="text" id="message-input" class="form-control"
                                placeholder="Message <%= group.group_name %>" autocomplete="off" autofocus required>
                            <button class="btn btn-primary rounded-0" type="submit">Send</button>
                        </div>
                    </form>
                </div>
            </div>
            <div class="d-flex justify-content-center">
                <form action="/group-settings" method="post">
                    <input type="hidden" name="chat_id" value="<%= group.chat_id %>">
                    <button type="submit" class="btn btn-outline-light">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor"
                            class="bi bi-gear-fill" viewBox="0 0 16 16">
                            <path
                                d="M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872zM8 10.93a2.929 2.929 0 1 1 0-5.86 2.929 2.929 0 0 1 0 5.858z" />
                        </svg>
                        Group Settings
                    </button>
                </form>
            </div>
        </div>
    </div>

    <!-- SOCKET -->
    <script src="/socket.io/socket.io.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            window.scrollTo({ top: document.body.scrollHeight, behavior: "auto" });
            window.scrollTo({ top: document.body.scrollHeight, behavior: 'instant' });

            const socket = io();
            const chatId = document.getElementById('chat-id').value;
            // Join the chat room
            socket.emit('join chat', chatId);

            // Handle form submission
            document.getElementById('chat-form').addEventListener('submit', function (e) {
                e.preventDefault();
                const input = document.getElementById('message-input');
                if (input.value) {
                    const message = {
                        chat_id: chatId,
                        content: input.value,
                        sender_id: '<%= user.user_id %>'
                    };
                    socket.emit('chat message', message);
                    input.value = '';
                }
            });

            // Listen for chat messages
            socket.on('chat message', function (msg) {
                if (parseInt(msg.chat_id) === parseInt(chatId)) {
                    const item = document.createElement('div');
                    item.className = 'media mb-1';
                    item.innerHTML = `
                <div class="media-body text-light">
                    <div class="d-flex py-1">
                        <div class="d-flex flex-column justify-content-start">
                            <img src="${msg.profile_image_url}" class="me-2 rounded-circle profile-picture" alt="Friend Avatar" style="width: 40px; height: 40px;">
                        </div>
                        <div>
                            <div class="d-flex align-items-center">
                                <h4 class="me-2">${msg.username}</h4>
                                <small>${displayDateTime(msg.created_at)}</small>
                            </div>
                            <p>${msg.content}</p>
                        </div>
                    </div>
                </div>
                `;
                    document.getElementById('chat-messages').appendChild(item);
                    window.scrollTo(0, document.body.scrollHeight);
                }
            });

            function displayDateTime(created_at) {
                const date = new Date(created_at);
                const now = new Date();

                // Get the time part in 24-hour format
                const time = date.toLocaleTimeString([], {
                    hour: '2-digit',
                    minute: '2-digit', hourCycle: 'h23'
                });

                // Function to check if two dates are on the same day
                const isSameDay = (d1, d2) =>
                    d1.getFullYear() === d2.getFullYear() &&
                    d1.getMonth() === d2.getMonth() &&
                    d1.getDate() === d2.getDate();

                // Check if the date is today
                if (isSameDay(date, now)) {
                    return `Today ${time}`;
                }

                // Check if the date is yesterday
                const yesterday = new Date();
                yesterday.setDate(now.getDate() - 1);
                if (isSameDay(date, yesterday)) {
                    return `Yesterday ${time}`;
                }

                // If neither, format as mm/dd/yyyy
                const formattedDate = date.toLocaleDateString([], {
                    month:
                        '2-digit', day: '2-digit', year: 'numeric'
                });
                return `${time} ${formattedDate}`;
            }
        });
    </script>

    <%- include("partials/footer.ejs") %>